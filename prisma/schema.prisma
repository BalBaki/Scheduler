// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "mongodb"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
}

model User {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  surname     String
  email       String     @unique
  password    String
  phoneNumber String
  imageUrl    String?
  bannerUrl   String?
  description String?
  slug        String?
  languages   String[]
  role        Roles      @default(PATIENT)
  status      UserStatus @default(WAITING)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  Session             Session[]
  doctorAppointments  Appointment[] @relation("DoctorAppointments")
  patientAppointments Appointment[] @relation("PatientAppointments")
}

model Appointment {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  start     DateTime
  end       DateTime
  doctorId  String   @db.ObjectId
  patientId String?  @db.ObjectId
  link      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  doctor  User  @relation("DoctorAppointments", fields: [doctorId], references: [id])
  patient User? @relation("PatientAppointments", fields: [patientId], references: [id])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Feedback {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Roles {
  ADMIN
  DOCTOR
  PATIENT
}

enum UserStatus {
  WAITING
  APPROVED
  DECLINED
}
